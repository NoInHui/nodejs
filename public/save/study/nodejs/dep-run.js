const dep1 = require('./dep1');
const dep2 = require('./dep2');

dep1();
dep2();

// 코드가 위에서 실행되므로 require('./dep1') 이 먼저 실행됩니다.
// dept1.js 에서는 제일 먼저 require('./dep2') 가 실행되는데요.
// 다시 dep2.js 에서는 require('./dep1') 이 실행됩니다.

// 놀랍게도 dep1 의 module.exports 가 함수가 아닌 빈 객체로 표시됩니다.
// 이러한 현상을 순환 참조 라고 부릅니다.
// 이렇게 순환 참조가 있을 경우에는 순환 참조되는 대상을 빈 객체로 만듭니다.
// 이때 에러가 발생하지 않고 조용히 빈 객체로 변경되므로 예기치 못한 동작이 발생할 수 있습니다.
// 따라서 순환 참조가 발생하지 않도록 구조를 잘 잡는것이 중요합니다.

// 존재하지 않는 모듈을 불러오려는 시도를 할 때
// 존재하지 않는 모듈을 불러올 떄는 에러가 발생합니다.


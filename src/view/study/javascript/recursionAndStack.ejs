<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title><%=pageName%></title>
    <link type="text/css" rel="stylesheet" href="/style/editor.css">
    <script type="text/javascript" src="/script/studyScript.js"></script>
</head>
<body>
    <div style="width: 100%; display: flex; justify-content: center;">
        <div style="padding: 10px 20px; border: 1px solid black; width: 1500PX;">
            <div class="button-area">
                <div style="display: flex; align-items: center;">
                    <h2 class="fileName" style="font-weight: 600;"><%=pageName%></h2>
                </div>
                <div>
                    <button id="pdfBtn" class="editor-button">pdf</button>
                    <button id="updateBtn" class="editor-button">수정</button>
                </div>
            </div>
            <div class="contents-section">
                <div>
                    <textarea id="editor" style="width:1455PX;height:700px;"></textarea>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="category" value="<%=category%>"/>
    <input type="hidden" id="page" value="<%=page%>"/>
</body>
</html>

<script>

// 재귀와 스택

// 함수에 대해 좀 더 깊이 알아보도록 하겠습니다.
// 함수 심화학습, 첫 번째 주제는 재귀(recursion) 입니다.

// 재귀는 큰 목표 작업 하나를 동일하면서 간단한 작업 여러 개로 나눌 수 있을 때 유용한 프로그래밍 패턴입니다.
// 목표 작업을 간단한 동작 하나와 목표 작업을 변형한 작업으로 단순화시킬 수 있을 때도 재귀를 사용할 수 있습니다.
// 곧 살펴보겠지만, 특정 자료구조를 다뤄야할 때도 재귀가 사용됩니다.

// 문제 해결을 하다 보면 함수에서 다른 함수를 호출해야 할 때가 있습니다.
// 이때 함수가 자기 자신을 호출할 수도 있는데, 이를 재귀라고 부릅니다.

// 두 가지 사고 방식

// 간단한 예시를 시작으로 재귀에 대해 알아보겠습니다.
// x 를 n 제곱해 주는 함수 pow(x,n) 을 만들어봅시다.
// pow(x,n)




</script>